apply plugin: 'com.android.application'
apply plugin: 'jacoco'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
apply plugin: 'com.google.gms.google-services'
apply plugin: 'com.google.firebase.crashlytics'
apply plugin: 'com.google.firebase.firebase-perf'

android {
    signingConfigs {
        release {
            storeFile rootProject.file('keystore.jks')
            storePassword 'MJKArakam2p5ckMh'
            keyPassword 'MJKArakam2p5ckMh'
            keyAlias = 'releaseKey'
        }
    }
    compileSdkVersion 29
    dataBinding {
        enabled = true
    }
    googleServices.disableVersionCheck = true
    androidExtensions {
        experimental = true
    }

    defaultConfig {
        applicationId "com.light.finder"
        minSdkVersion 24
        targetSdkVersion 29
        versionCode 10
        versionName "1.0"
        vectorDrawables.useSupportLibrary true
    }

    buildTypes {
        debug {
            testCoverageEnabled !project.hasProperty('android.injected.invoked.from.ide')
        }
        release {
            debuggable false
            minifyEnabled false
            shrinkResources false
            signingConfig signingConfigs.release
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }

    }

    flavorDimensions "version"

    productFlavors {
        qa {
            applicationIdSuffix ".qa"
            buildConfigField "String", "BASE_URL", "\"https://stage.lampfinder.d.acts.gso.cloud/api/\""
            buildConfigField "String", "CART_URL", "\"https://lightfinder-staging.luzernsolutions.com/us/hueCart/api/\""
            buildConfigField "String", "LIGHT_FINDER_OPEN_URL", "\"https://stage.lampfinder.d.acts.gso.cloud/api/\""
            buildConfigField "String", "OAUTH_URL", "\"https://lightfinder.auth.us-east-1.amazoncognito.com/oauth2/\""
            buildConfigField "String", "CLIENT_ID", "\"4pqsud54rr141gghtmgipmj257\""
            buildConfigField "String", "CLIENT_SECRET", "\"h6jpssq6cpsgamngaiag29644ae19uc682a6d943j2ov3aa2t5s\""

        }
        production {
            applicationId "com.light.finder"
            buildConfigField "String", "BASE_URL", "\"https://prod.lampfinder.d.acts.gso.cloud/api/\""
            buildConfigField "String", "CART_URL", "\"https://www.store.lightguide.signify.com/us/hueCart/api/\""
            buildConfigField "String", "LIGHT_FINDER_OPEN_URL", "\"https://prod.lampfinder.d.acts.gso.cloud/api/\""
            buildConfigField "String", "OAUTH_URL", "\"https://lightfinder-prod.auth.us-east-1.amazoncognito.com/oauth2/\""
            buildConfigField "String", "CLIENT_ID", "\"3vqv9ei8rep5n3nolekb5tt30e\""
            buildConfigField "String", "CLIENT_SECRET", "\"7g91ntl8os16ul5ogurlk1gf7rlb3skahq79uiu9j1m1sdj3drp\""


        }
    }


    tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile).all {
        kotlinOptions {
            jvmTarget = "1.8"
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    // work-runtime-ktx 2.1.0 and above now requires Java 8
    kotlinOptions {
        jvmTarget = "1.8"
    }

}

jacoco {
    toolVersion = "0.8.5"
}

dependencies {
    implementation project(':presentation')
    implementation project(':usecases')
    implementation project(':domain')
    implementation project(':data')

    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation debugToolsDependencies.values()
    kapt kaptJetpackDependencies.values()
    implementation jetPackDependencies.values()
    kapt kaptDaggerDependencies.values()
    implementation daggerDependencies.values()
    implementation networkDependencies.values()
    implementation coroutinesDependencies.values()
    implementation cameraxDependencies.values()
    testImplementation testDependencies.values()
    androidTestImplementation androidTestDependencies.values()
    implementation navigationDependencies.values()
    implementation lottieDependencies.values()
    implementation googleServicesDependencies.values()
    implementation usabillaDependencies.values()
}

task fullCoverageReport(type: JacocoReport) {
    dependsOn 'createDebugCoverageReport'
    dependsOn 'testDebugUnitTest'
    reports {
        xml.enabled = true
        html.enabled = true
    }

    def fileFilter = ['**/R.class', '**/R$*.class', '**/BuildConfig.*', '**/Manifest*.*',
                      '**/*Test*.*', 'android/**/*.*',
                      '**/*_MembersInjector.class',
                      '**/Dagger*Component.class',
                      '**/Dagger*Component$Builder.class',
                      '**/*_*Factory.class',
                      '**/*ComponentImpl.class',
                      '**/*SubComponentBuilder.class']
    def debugTree = fileTree(dir: "${buildDir}/intermediates/classes/debug", excludes: fileFilter)
    def mainSrc = "${project.projectDir}/src/main/java"

    sourceDirectories = files([mainSrc])
    classDirectories = files([debugTree])
    executionData = fileTree(dir: "$buildDir", includes: [
            "jacoco/testDebugUnitTest.exec",
            "outputs/code-coverage/connected/*coverage.ec"
    ])
}

// we need all open to run tests which  a we enable only for debug builds.
project.tasks.whenTaskAdded {
    if (it.name == "testReleaseUnitTest") {
        it.enabled = false
    }
}